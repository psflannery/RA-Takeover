//
// Buttons
// See: http://hugogiraudel.com/2013/04/02/items-on-circle/
// See: http://dabblet.com/gist/3864650
// --------------------------------------------------

.ot-btn-container {
    text-align: center;
    position: fixed;
    left: @launch-btn-gutter-width;
    bottom: @launch-btn-gutter-width;
    z-index: @zindex-launch-button;
}
.ot-btn-main-menu {
    position: relative;
    display: inline-block;
    -webkit-touch-callout: none;
    .user-select(none);
    cursor: pointer;
}
.ot-menu-trigger {
    background: none;
    .square(@launch-btn-size * 0.6);
    padding: 0;
    margin: 0;
    border: none;
    outline: none;
    cursor: pointer;
    text-align: center;
    color: @launch-btn-text-color;
    position: relative;
    z-index: @zindex-launch-btn;
    -webkit-tap-highlight-color: rgba(0,0,0,0);
    -webkit-tap-highlight-color: transparent; // For some Androids
    @media (min-width: @screen-sm-min) {
        .square(@launch-btn-size);
    }
}
.ot-btn-menu-items {
    position: absolute;
    .square(100%);
    top: 0;
    padding: 0;
    margin: 0;
    list-style-type: none;
    @media (max-width: @screen-xs-max) {
        .scale(0.8);
    }
    .menu--open & {
        // @param {Integer} @nb-items - Number or items
        // @param {Integer} @degrees - Number or degrees over which to distribute
        // @param {Integer} @rotation - Beginig position of circle
        // @param {Length}  @circle-size - Container size
        // @param {Length}  @item-size - Item size
        .distribute-on-circle( 17, -180, -270, 90vh, @avatar-size / 1.45 );
        @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
            .distribute-on-circle( 17, -360, 0, 80vw, @avatar-size );
            position: fixed;
            top: 50%;
        }
        @media (min-width: @screen-md-min) {
            .distribute-on-circle( 17, -180, 0, 85vw, @avatar-size );
        }
        .is-active {
            .transition(box-shadow .3s ease);
            box-shadow: 0 0 2px 2px red, 0 0 4px 4px yellow, 0 0 6px 6px blue, 0 0 8px 8px violet;
        }
    }
    li {
        transform: scale(0.5) rotate(0deg) translate(0vw) rotate(0deg);
        position: absolute;
        z-index: @zindex-behind;
        .transform-origin(bottom);
        .square(@avatar-size);
        button {
            display: block;
            //box-shadow: 0 1px 10px fade(#000000, 15%);
            outline: none;
            padding: 0;
            border: 0;
            border-radius: 50%;
            text-align: center;
            vertical-align: middle;
            touch-action: manipulation;
            cursor: pointer;
            background-image: none;
            white-space: nowrap;
            -webkit-tap-highlight-color: rgba(0,0,0,0);
            -webkit-tap-highlight-color: transparent; // For some Androids
            .menu--open & {
                box-shadow: 0px 1px 20px 1px fade(#000000, 40%), 0 0 60px 20px white;
            }
        }
    }
    img {
        vertical-align: bottom;
        width: 100%;
        height: auto;
        border-radius: 50%
    }
}
.ot-morph-shape {
    position: absolute;
    .square(100%);
    top: 0;
    left: 0;
    z-index: @zindex-launch-btn;
    svg {
        fill: @launch-btn-fill-color;
        .transition(fill 0.3s); 
        .menu--open & {
            fill: @launch-btn-fill-color-open;
        }
    }
}
.ot-btn-info {
    //background-color: #fff;
    position: fixed;
    bottom: (@grid-gutter-width + 10px);
    right: @grid-gutter-width;
    z-index: @zindex-info-btn;
    .square(86px);
}


// Make a button look and behave like a link
.ot-btn-link {
  color: @info-link-color;
  font-weight: normal;
  //border-radius: 50%;
  border-radius: 0;
  cursor: pointer;
  font-size: @info-link-font-size;
  text-decoration: none;

  &,
  &:active,
  &.active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    .box-shadow(none);
    outline: none;
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    color: @info-link-hover-color;
    text-decoration: @info-link-hover-decoration;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: @btn-link-disabled-color;
      text-decoration: none;
    }
  }
}